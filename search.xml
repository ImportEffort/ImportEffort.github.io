<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[Android Splash 动态闪屏页面及三秒跳转实现]]></title>
      <url>/2017/08/22/Android-Splash-%E5%8A%A8%E6%80%81%E9%97%AA%E5%B1%8F%E9%A1%B5%E9%9D%A2%E5%8F%8A%E4%B8%89%E7%A7%92%E8%B7%B3%E8%BD%AC%E5%AE%9E%E7%8E%B0/</url>
      <content type="html"><![CDATA[<p>本文已授权公众号hongyangAndroid原创首发</p>
<p>最近公司产品大大说我们需要一个动态替换的闪屏页面，like 某猫，某东一样，可以动态替换。<br>产品大大就是厉害，说一句话我们就需要实现好几个功能：</p>
<ol>
<li><p>创建一个冷启动后的闪屏页面（Splash 页面）</p>
</li>
<li><p>这个页面默认 3s 倒计时，点击倒计时按钮可以跳转并结束倒计时</p>
</li>
<li><p>点击图片如果有外链，则跳转应用的 web 页面用来作为活动页面（没错这点和某猫很像）</p>
</li>
<li><p>动态替换厉害了，我们需要在进入这个页面后去后台请求一下是否有新的图片，如果是新的图片则下载到本地，替换掉原来的图片，下次用户在进入 Splash 就会看到一个崭新的图片。</p>
</li>
</ol>
<p><img src="http://upload-images.jianshu.io/upload_images/1819960-64a5c374f9c8d5da.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="效果图"></p>
<a id="more"></a>
<h2 id="一、布局实现"><a href="#一、布局实现" class="headerlink" title="一、布局实现"></a>一、布局实现</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">RelativeLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></div><div class="line"><span class="tag">         <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></div><div class="line"><span class="tag">         <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">ImageView</span></span></div><div class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">"@+id/sp_bg"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:src</span>=<span class="string">"@mipmap/icon_splash"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:scaleType</span>=<span class="string">"centerCrop"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>/&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">Button</span></span></div><div class="line"><span class="tag">    <span class="attr">android:visibility</span>=<span class="string">"invisible"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:gravity</span>=<span class="string">"center"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:textSize</span>=<span class="string">"10sp"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:textColor</span>=<span class="string">"@color/white"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">"@+id/sp_jump_btn"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:background</span>=<span class="string">"@drawable/btn_splash_shape"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"60dp"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"30dp"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:layout_alignParentRight</span>=<span class="string">"true"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:layout_alignParentTop</span>=<span class="string">"true"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:layout_marginRight</span>=<span class="string">"20dp"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:layout_marginTop</span>=<span class="string">"20dp"</span>/&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></div></pre></td></tr></table></figure>
<p>布局文件文件相对来说还是比较简单，就需要一个 ImageView 和 Button 即可，Button 的背景是一个自定义的 shape，透明度颜色啥的,根据UI妹砸说的算就好了。</p>
<figure class="highlight processing"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">&lt;<span class="built_in">shape</span> xmlns:android=<span class="string">"http://schemas.android.com/apk/res/android"</span></div><div class="line">   android:<span class="built_in">shape</span>=<span class="string">"rectangle"</span>&gt;</div><div class="line">&lt;solid android:<span class="built_in">color</span>=<span class="string">"#99c4c4c4"</span>/&gt;</div><div class="line">&lt;corners android:radius=<span class="string">"20dp"</span>/&gt;</div><div class="line">&lt;<span class="built_in">stroke</span></div><div class="line">    android:<span class="built_in">width</span>=<span class="string">"0.7dp"</span></div><div class="line">    android:<span class="built_in">color</span>=<span class="string">"#7fffffff"</span>/&gt;</div><div class="line"></div><div class="line">&lt;/<span class="built_in">shape</span>&gt;</div></pre></td></tr></table></figure>
<h2 id="二、倒计时功能实现"><a href="#二、倒计时功能实现" class="headerlink" title="二、倒计时功能实现"></a>二、倒计时功能实现</h2><p>实现倒计时的功能方法有很多，最基本的你可以使用 Handler 来实现吧，还可以是用 Timer 吧。</p>
<p>但是由于之前写验证码倒计时的时候发现 android.os 中有一个神奇的类叫 <a href="https://developer.android.com/reference/android/os/CountDownTimer.html" target="_blank" rel="external">CountDownTimer</a> 的类，此类神奇之处就在于你完全不需要理会那些线程交互他都给你处理好了，你只管在回调中处理时间设置跳转逻辑就好了。</p>
<p>但是有一个不足的地方就它的第一秒的倒计时有时候会不可见，所以我们将倒计时总时间设置为 3200ms 。</p>
<figure class="highlight aspectj"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">private</span> CountDownTimer countDownTimer = <span class="keyword">new</span> CountDownTimer(<span class="number">3200</span>, <span class="number">1000</span>) &#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onTick</span><span class="params">(<span class="keyword">long</span> millisUntilFinished)</span> </span>&#123;</div><div class="line">        mSpJumpBtn.setText(<span class="string">"跳过("</span> + millisUntilFinished / <span class="number">1000</span> + <span class="string">"s)"</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onFinish</span><span class="params">()</span> </span>&#123;</div><div class="line">        mSpJumpBtn.setText(<span class="string">"跳过("</span> + <span class="number">0</span> + <span class="string">"s)"</span>);</div><div class="line">        gotoLoginOrMainActivity();</div><div class="line">    &#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<p>最后需要在有闪屏页面的情况下，进入开启倒计时：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">startClock</span><span class="params">()</span> </span>&#123;</div><div class="line">    mSpJumpBtn.setVisibility(View.VISIBLE);</div><div class="line">    countDownTimer.start();</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="三、下载功能实现点击跳转功能实现"><a href="#三、下载功能实现点击跳转功能实现" class="headerlink" title="三、下载功能实现点击跳转功能实现"></a>三、下载功能实现点击跳转功能实现</h2><p>上边说了我们 APP 点击图片需要可以跳转，下面代码给出了背景点击跳转的逻辑：</p>
<figure class="highlight aspectj"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">    <span class="keyword">super</span>.onCreate(savedInstanceState);</div><div class="line">    setContentView(R.layout.activity_splash);</div><div class="line">    ButterKnife.bind(<span class="keyword">this</span>);</div><div class="line">    checkSDCardPermission();</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="meta">@OnClick</span>(&#123;R.id.sp_bg, R.id.sp_jump_btn&#125;)</div><div class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onViewClicked</span><span class="params">(View view)</span> </span>&#123;</div><div class="line">    <span class="keyword">switch</span> (view.getId()) &#123;</div><div class="line">        <span class="keyword">case</span> R.id.sp_bg:</div><div class="line">            gotoWebActivity();</div><div class="line">            <span class="keyword">break</span>;</div><div class="line">        <span class="keyword">case</span> R.id.sp_jump_btn:</div><div class="line">            gotoLoginOrMainActivity();</div><div class="line">            <span class="keyword">break</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>跳转逻辑可以根据实际的项目需求来规定，下面的代码中 Splash 为本地序列化的 model 用来存储网络下载的闪屏页面信息，稍后会有详细的序列化过程，此刻我们只需要关注跳转逻辑：</p>
<figure class="highlight aspectj"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">private</span> Splash mSplash;</div><div class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">void</span> <span class="title">gotoWebActivity</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">if</span> (mSplash != <span class="keyword">null</span> &amp;&amp; mSplash.click_url != <span class="keyword">null</span>) &#123;</div><div class="line">        Intent intent = <span class="keyword">new</span> Intent(<span class="keyword">this</span>, BannerActivity.class);</div><div class="line">        intent.putExtra(<span class="string">"url"</span>, mSplash.click_url);</div><div class="line">        intent.putExtra(<span class="string">"title"</span>, mSplash.title);</div><div class="line">        intent.putExtra(<span class="string">"fromSplash"</span>, <span class="keyword">true</span>);</div><div class="line">        intent.putExtra(<span class="string">"needShare"</span>, <span class="keyword">false</span>);</div><div class="line">        startActivity(intent);</div><div class="line">        finish();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>机智的你可能看出来我们并没有在离开页面的时候结束掉 timer，其实我们是复写了 onDestroy 方法。 </p>
<figure class="highlight aspectj"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">void</span> <span class="title">onDestroy</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">super</span>.onDestroy();</div><div class="line">    <span class="keyword">if</span> (countDownTimer != <span class="keyword">null</span>)</div><div class="line">        countDownTimer.cancel();</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>其实跳转以后还有一个坑就是，从 web 页面返回的时候，因为闪屏页面是你应用的第一个页面，而跳转到 web 页面的是你 finish 掉了该页面，那么从 web 页返回的时候不做处理，用户就直接退出了 app 这样当然是不允许的。</p>
<p>所以请在 web 页面中添加以下逻辑：</p>
<figure class="highlight aspectj"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//此方法是toolbar 的返回事件调用的方法 mFromSplash 为启动页面传递过来的参数</span></div><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">void</span> <span class="title">onLeftClick</span><span class="params">(View view)</span> </span>&#123;</div><div class="line">    <span class="keyword">if</span> (mFromSplash) &#123;</div><div class="line">        gotoLoginOrMainActivity();</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        <span class="keyword">super</span>.onLeftClick(view);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 此方法为系统返回键的监听</span></div><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onBackPressed</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">if</span> (mWebView.canGoBack()) &#123;</div><div class="line">        mWebView.goBack();</div><div class="line">    &#125; <span class="function"><span class="keyword">else</span> <span class="title">if</span> <span class="params">(mFromSplash)</span> </span>&#123;</div><div class="line">        gotoLoginOrMainActivity();</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        <span class="keyword">super</span>.onBackPressed();</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"> <span class="comment">// 下面是跳转逻辑 </span></div><div class="line"> <span class="keyword">private</span> <span class="function"><span class="keyword">void</span> <span class="title">gotoLoginOrMainActivity</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">if</span> (UserCenter.getInstance().getToken() == <span class="keyword">null</span>) &#123;</div><div class="line">        gotoLoginActivity();</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        gotoMainActivity();</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">.... gotoLoginActivity，gotoMainActivity 太长了，不给了自己写 (*^__^*) 嘻嘻……</div></pre></td></tr></table></figure>
<hr>
<h2 id="四、下载网络图片以及序列化本地"><a href="#四、下载网络图片以及序列化本地" class="headerlink" title="四、下载网络图片以及序列化本地"></a>四、下载网络图片以及序列化本地</h2><p>上边说了我们有这样一个需求，就是如果后台的接口返回的图片与本地序列化的图片不同，我们需要将新的图片下载到本地，然后下次进入 Splash 的时候就展示的新的图片了。</p>
<blockquote>
<p>这里你需要知道知识有下边几个：</p>
<ol>
<li>java bean 序列化与反序列化的知识</li>
<li>IntentService 服务的知识</li>
<li>AsycTask 的使用 </li>
<li>6.0 以上权限申请 <a href="https://github.com/googlesamples/easypermissions" target="_blank" rel="external">EasyPermissions</a> 的使用。</li>
</ol>
<p>以上不熟悉的同学，看到下边的代码可能会引起适量身体不适 </p>
</blockquote>
<hr>
<blockquote>
<p>其实这里更好的操作，我们可以将图片下载到内存中，这样并不需要申请sdk权限。这里当时实现的时候有点欠考虑了。如果您们保存图片的地址在内存中，就可以跳过这一步。</p>
</blockquote>
<h3 id="1-权限管理"><a href="#1-权限管理" class="headerlink" title="1. 权限管理"></a>1. 权限管理</h3><p>首先我们注意到已进入 Splash 页面我们就进行权限检查，因为我们需要下载最新的闪屏到本地，并取出序列化的对象，来展示对应的内容。</p>
<p>其中 <code>checkSDCardPermission</code>  涉及到 6.0 以上下载最新图片的逻辑，这里采用的是 官方的 EasyPermissions 来处理，关于 EasyPermissions 的使用这里就不多说了，需要了解的请移步 <a href="https://github.com/googlesamples/easypermissions" target="_blank" rel="external">EasyPermissions</a>；</p>
<figure class="highlight aspectj"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> RC_PERMISSION = <span class="number">123</span>;</div><div class="line"></div><div class="line"><span class="meta">@TargetApi</span>(Build.VERSION_CODES.JELLY_BEAN)</div><div class="line"><span class="meta">@AfterPermissionGranted</span>(RC_PERMISSION)</div><div class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">void</span> <span class="title">checkSDCardPermission</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">if</span> (EasyPermissions.hasPermissions(<span class="keyword">this</span>, Manifest.permission.WRITE_EXTERNAL_STORAGE, Manifest.permission.READ_EXTERNAL_STORAGE)) &#123;</div><div class="line">        initSplashImage();</div><div class="line">        startImageDownLoad();</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        EasyPermissions.requestPermissions(<span class="keyword">this</span>, <span class="string">"需要您提供【**】App 读写内存卡权限来确保应用更好的运行"</span>, RC_PERMISSION, Manifest.permission.READ_EXTERNAL_STORAGE, Manifest.permission.WRITE_EXTERNAL_STORAGE);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>简单来说在 <code>EasyPermissions.hasPermissions</code> 的回调中我们就可以正确的做我们下载图片的工作了。</p>
<figure class="highlight aspectj"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">void</span> <span class="title">initSplashImage</span><span class="params">()</span> </span>&#123;</div><div class="line">    mSplash = getLocalSplash();  </div><div class="line">    <span class="comment">//如果取出本地序列化的对象成功 则进行图片加载和倒计时</span></div><div class="line">    <span class="keyword">if</span> (mSplash != <span class="keyword">null</span> &amp;&amp; !TextUtils.isEmpty(mSplash.savePath)) &#123;</div><div class="line">        Logcat.d(<span class="string">"SplashActivity 获取本地序列化成功"</span> + mSplash);</div><div class="line">        Glide.with(<span class="keyword">this</span>).load(mSplash.savePath).dontAnimate().into(mSpBgImage);</div><div class="line">        startClock();<span class="comment">//加载成功 开启倒计时</span></div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">    <span class="comment">// 如果本地没有 直接跳转</span></div><div class="line">        mSpJumpBtn.setVisibility(View.INVISIBLE);</div><div class="line">        mSpJumpBtn.postDelayed(<span class="keyword">new</span> Runnable() &#123;</div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">                gotoLoginOrMainActivity();</div><div class="line">            &#125;</div><div class="line">        &#125;, <span class="number">400</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">    </div><div class="line"><span class="comment">// 取出本地序列化的 Splash </span></div><div class="line"><span class="keyword">private</span> <span class="function">Splash <span class="title">getLocalSplash</span><span class="params">()</span> </span>&#123;</div><div class="line">    Splash splash = <span class="keyword">null</span>;</div><div class="line">    <span class="keyword">try</span> &#123;</div><div class="line">        File serializableFile = SerializableUtils.getSerializableFile(Constants.SPLASH_PATH, Constants.SPLASH_FILE_NAME);</div><div class="line">        splash = (Splash) SerializableUtils.readObject(serializableFile);</div><div class="line">    &#125; <span class="keyword">catch</span> (IOException e) &#123;</div><div class="line">        Logcat.e(<span class="string">"SplashActivity 获取本地序列化闪屏失败"</span> + e.getMessage());</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> splash;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="2-创建本地序列化对象-Splash-Entity"><a href="#2-创建本地序列化对象-Splash-Entity" class="headerlink" title="2. 创建本地序列化对象 Splash Entity"></a>2. 创建本地序列化对象 Splash Entity</h3><p>Splash 内容如下：</p>
<figure class="highlight typescript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">class</span> Splash <span class="keyword">implements</span> Serializable &#123;</div><div class="line"></div><div class="line"><span class="keyword">private</span> <span class="keyword">static</span> final long serialVersionUID = <span class="number">7382351359868556980</span>L;<span class="comment">//这里需要写死 序列化Id</span></div><div class="line"><span class="keyword">public</span> int id;</div><div class="line"><span class="keyword">public</span> <span class="built_in">String</span> burl;<span class="comment">//大图 url</span></div><div class="line"><span class="keyword">public</span> <span class="built_in">String</span> surl;<span class="comment">//小图url</span></div><div class="line"><span class="keyword">public</span> int <span class="keyword">type</span>;<span class="comment">//图片类型 Android 1 IOS 2</span></div><div class="line"><span class="keyword">public</span> <span class="built_in">String</span> click_url; <span class="comment">// 点击跳转 URl</span></div><div class="line"><span class="keyword">public</span> <span class="built_in">String</span> savePath;<span class="comment">//图片的存储地址</span></div><div class="line"><span class="keyword">public</span> <span class="built_in">String</span> title;<span class="comment">//图片的存储地址</span></div><div class="line"></div><div class="line"><span class="keyword">public</span> Splash(<span class="built_in">String</span> burl, <span class="built_in">String</span> surl, <span class="built_in">String</span> click_url, <span class="built_in">String</span> savePath) &#123;</div><div class="line">    <span class="keyword">this</span>.burl = burl;</div><div class="line">    <span class="keyword">this</span>.surl = surl;</div><div class="line">    <span class="keyword">this</span>.click_url = click_url;</div><div class="line">    <span class="keyword">this</span>.savePath = savePath;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="keyword">public</span> <span class="built_in">String</span> toString() &#123;</div><div class="line">    <span class="keyword">return</span> <span class="string">"Splash&#123;"</span> +</div><div class="line">            <span class="string">"id="</span> + id +</div><div class="line">            <span class="string">", burl='"</span> + burl + <span class="string">'\''</span> +</div><div class="line">            <span class="string">", surl='"</span> + surl + <span class="string">'\''</span> +</div><div class="line">            <span class="string">", type="</span> + <span class="keyword">type</span> +</div><div class="line">            <span class="string">", click_url='"</span> + click_url + <span class="string">'\''</span> +</div><div class="line">            <span class="string">", savePath='"</span> + savePath + <span class="string">'\''</span> +</div><div class="line">            <span class="string">'&#125;'</span>;</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="3-序列化反序列话的工具类-SerializableUtils"><a href="#3-序列化反序列话的工具类-SerializableUtils" class="headerlink" title="3. 序列化反序列话的工具类 SerializableUtils"></a>3. 序列化反序列话的工具类 SerializableUtils</h3><p>由于项目用到序列化地方还有挺多的，所以这里封装了一个序列化工具类<code>SerializableUtils</code>：</p>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">class</span> SerializableUtils &#123;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="keyword">static</span> &lt;T <span class="keyword">extends</span> Serializable&gt; Object readObject(<span class="keyword">File</span> <span class="keyword">file</span>) &#123;</div><div class="line">    ObjectInputStream in = <span class="keyword">null</span>;</div><div class="line">    T t = <span class="keyword">null</span>;</div><div class="line">    <span class="keyword">try</span> &#123;</div><div class="line">        in = <span class="keyword">new</span> ObjectInputStream(<span class="keyword">new</span> FileInputStream(<span class="keyword">file</span>));</div><div class="line">        t = (T) in.readObject();</div><div class="line">    &#125; <span class="keyword">catch</span> (EOFException e) &#123;</div><div class="line">        <span class="comment">// ... this is fine</span></div><div class="line">    &#125; <span class="keyword">catch</span> (IOException e) &#123;</div><div class="line">        Logcat.e(<span class="string">"e "</span> + e.getMessage());</div><div class="line">    &#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</div><div class="line">        e.printStackTrace();</div><div class="line">    &#125; <span class="keyword">finally</span> &#123;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            <span class="keyword">if</span> (in != <span class="keyword">null</span>) in.close();</div><div class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> t;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="keyword">static</span> &lt;T <span class="keyword">extends</span> Serializable&gt; <span class="keyword">boolean</span> writeObject(T t, String fileName) &#123;</div><div class="line">    ObjectOutputStream out = <span class="keyword">null</span>;</div><div class="line">    <span class="keyword">try</span> &#123;</div><div class="line">        out = <span class="keyword">new</span> ObjectOutputStream(<span class="keyword">new</span> FileOutputStream(fileName));</div><div class="line">        out.writeObject(t);</div><div class="line">        Logcat.d(<span class="string">"序列化成功 "</span> + t.toString());</div><div class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">    &#125; <span class="keyword">catch</span> (IOException e) &#123;</div><div class="line">        e.printStackTrace();</div><div class="line">        Logcat.d(<span class="string">"序列化失败 "</span> + e.getMessage());</div><div class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">    &#125; <span class="keyword">finally</span> &#123;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            <span class="keyword">if</span> (out != <span class="keyword">null</span>) out.close();</div><div class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">File</span> getSerializableFile(String rootPath, String fileName) <span class="keyword">throws</span> IOException &#123;</div><div class="line">    <span class="keyword">File</span> <span class="keyword">file</span> = <span class="keyword">new</span> <span class="keyword">File</span>(rootPath);</div><div class="line">    <span class="keyword">if</span> (!<span class="keyword">file</span>.exists()) <span class="keyword">file</span>.mkdirs();</div><div class="line">    <span class="keyword">File</span> serializable = <span class="keyword">new</span> <span class="keyword">File</span>(<span class="keyword">file</span>, fileName);</div><div class="line">    <span class="keyword">if</span> (!serializable.exists()) serializable.createNewFile();</div><div class="line">    <span class="keyword">return</span> serializable;</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>经过上边的努力我们已经完成了从本地反序列化内容，然后加载图片的工作了，剩下的需要做的就是下载最新图片的工作。</p>
<h3 id="4-请求接口下载最新的闪屏信息和图片"><a href="#4-请求接口下载最新的闪屏信息和图片" class="headerlink" title="4. 请求接口下载最新的闪屏信息和图片"></a>4. 请求接口下载最新的闪屏信息和图片</h3><blockquote>
<p>这里经过考虑，我决定采用服务去下载，因为这样可以少很多麻烦，也不影响程序的正常运行。但是绝不是你们要采用这样的方法，你们也可以单独写个工具类内部去开线程做这件事。</p>
<p>项目中使用开启 <code>IntentServie</code> 来下载图片，关于这中服务的最大的好处就是，我们不需要关注服务是否执行完任务，当他执行完 onHandleIntent 方法后他就自己挑用 stop 方法了。我们只需要关注下载逻辑和序列化逻辑就好。</p>
</blockquote>
<p><code>checkSDCardPermission</code> 中调用的 <code>startImageDownLoad（）</code> 方法：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">startImageDownLoad</span><span class="params">()</span> </span>&#123;</div><div class="line">SplashDownLoadService.startDownLoadSplashImage(<span class="keyword">this</span>, Constants.DOWNLOAD_SPLASH);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>SplashDownLoadService 内容，IntentService 在调用了 startService 后会执行 <code>onHandleIntent</code> 方法，在这方法中我们去请求服务器最新的数据即 <code>loadSplashNetDate</code>：</p>
<figure class="highlight fortran"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> SplashDownLoadService() &#123;</div><div class="line">    super(<span class="string">"SplashDownLoad"</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> static void startDownLoadSplashImage(Context context, String <span class="keyword">action</span>) &#123;</div><div class="line">    <span class="keyword">Intent</span> <span class="keyword">intent</span> = new <span class="keyword">Intent</span>(context, SplashDownLoadService.<span class="keyword">class</span>);</div><div class="line">    <span class="keyword">intent</span>.putExtra(Constants.EXTRA_DOWNLOAD, <span class="keyword">action</span>);</div><div class="line">    context.startService(<span class="keyword">intent</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line">@Override</div><div class="line"><span class="keyword">protected</span> void onHandleIntent(@Nullable <span class="keyword">Intent</span> <span class="keyword">intent</span>) &#123;</div><div class="line">    <span class="keyword">if</span> (<span class="keyword">intent</span> <span class="comment">!= null) &#123;</span></div><div class="line">        String <span class="keyword">action</span> = <span class="keyword">intent</span>.getStringExtra(Constants.EXTRA_DOWNLOAD);</div><div class="line">        <span class="keyword">if</span> (<span class="keyword">action</span>.equals(Constants.DOWNLOAD_SPLASH)) &#123;</div><div class="line">            loadSplashNetDate();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>由于是公司项目，请求方法就不给出了，但是需要讲下请求数据后如何判断是否需要执行下载任务：</p>
<figure class="highlight nix"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="attr">mScreen</span> = common.attachment.flashScreen;</div><div class="line">       Splash <span class="attr">splashLocal</span> = getSplashLocal();</div><div class="line">       <span class="keyword">if</span> (mScreen != <span class="literal">null</span>) &#123;</div><div class="line">           <span class="keyword">if</span> (<span class="attr">splashLocal</span> == <span class="literal">null</span>) &#123;</div><div class="line">              Logcat.d(<span class="string">"splashLocal 为空导致下载"</span>);</div><div class="line">              startDownLoadSplash(Constants.SPLASH_PATH, mScreen.burl);</div><div class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (isNeedDownLoad(splashLocal.savePath, mScreen.burl)) &#123;</div><div class="line">                  Logcat.d(<span class="string">"isNeedDownLoad 导致下载"</span>);</div><div class="line">                  startDownLoadSplash(Constants.SPLASH_PATH, mScreen.burl);</div><div class="line">           &#125;</div><div class="line">       &#125; <span class="keyword">else</span> &#123;//由于活动是一段时间，等活动结束后我们并不需要在进入闪屏页面，这个时候我们就需要将本地文件删除，下次在进来，本地文件为空，就会直接 finish 掉 Splash 页面，进入主页面。</div><div class="line">          <span class="keyword">if</span> (splashLocal != <span class="literal">null</span>) &#123;</div><div class="line">                File <span class="attr">splashFile</span> = SerializableUtils.getSerializableFile(Constants.SPLASH_PATH, SPLASH_FILE_NAME);</div><div class="line">                 <span class="keyword">if</span> (splashFile.exists()) &#123;</div><div class="line">                         splashFile.delete();</div><div class="line">                         Logcat.d(<span class="string">"mScreen为空删除本地文件"</span>);</div><div class="line">                   &#125;</div><div class="line">            &#125;</div><div class="line">       &#125;</div></pre></td></tr></table></figure>
<p>由于活动是一段时间，等活动结束后我们并不需要在进入闪屏页面，这个时候我们就需要将本地文件删除，下次在进来，本地文件为空，就会直接 finish 掉 Splash 页面，进入主页面。</p>
<p><code>getSplashLocal</code> 方法即反序列话本地存储的 Splash Entity 的过程，上边已经给出这里就不细说，主要讲一下判断逻辑 <code>isNeedDownLoad</code>：</p>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * @param path 本地存储的图片绝对路径</span></div><div class="line"><span class="comment"> * @param url  网络获取url</span></div><div class="line"><span class="comment"> * @return 比较储存的 图片名称的哈希值与 网络获取的哈希值是否相同</span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="keyword">private</span> <span class="keyword">boolean</span> isNeedDownLoad(String path, String url) &#123;</div><div class="line">    <span class="comment">// 如果本地存储的内容为空则进行下载</span></div><div class="line">    <span class="keyword">if</span> (TextUtils.isEmpty(path)) &#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="comment">// 如果本地文件不存在则进行下载，这里主要防止用户误删操作</span></div><div class="line">    <span class="keyword">File</span> <span class="keyword">file</span> = <span class="keyword">new</span> <span class="keyword">File</span>(path);</div><div class="line">    <span class="keyword">if</span> (!<span class="keyword">file</span>.exists()) &#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="comment">// 如果两者都存在则判断图片名称的 hashCode 是否相同，不相同则下载</span></div><div class="line">    <span class="keyword">if</span> (getImageName(path).hashCode() != getImageName(url).hashCode()) &#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>分隔 uri 取图片名称的方法：</p>
<figure class="highlight processing"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">private</span> <span class="keyword">String</span> getImageName(<span class="keyword">String</span> url) &#123;</div><div class="line">    <span class="keyword">if</span> (TextUtils.isEmpty(url)) &#123;</div><div class="line">        <span class="keyword">return</span> <span class="string">""</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">String</span>[] <span class="built_in">split</span> = url.<span class="built_in">split</span>(<span class="string">"/"</span>);</div><div class="line">    <span class="keyword">String</span> nameWith_ = <span class="built_in">split</span>[<span class="built_in">split</span>.length - <span class="number">1</span>];</div><div class="line">    <span class="keyword">String</span>[] split1 = nameWith_.<span class="built_in">split</span>(<span class="string">"\\."</span>);</div><div class="line">    <span class="keyword">return</span> split1[<span class="number">0</span>];</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>满足下载条件后则调用 DownLoadTask 下载。</p>
<figure class="highlight arduino"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> class DownLoadUtils &#123;</div><div class="line"></div><div class="line"><span class="keyword">public</span> interface DownLoadInterFace &#123;</div><div class="line">    <span class="keyword">void</span> afterDownLoad(ArrayList&lt;<span class="keyword">String</span>&gt; savePaths);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> downLoad(<span class="keyword">String</span> savePath, DownLoadInterFace downLoadInterFace, <span class="keyword">String</span>... download) &#123;</div><div class="line">    <span class="keyword">new</span> DownLoadTask(savePath, downLoadInterFace).execute(download);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">private</span> <span class="keyword">static</span> class DownLoadTask extends AsyncTask&lt;<span class="keyword">String</span>, Integer, ArrayList&lt;<span class="keyword">String</span>&gt;&gt; &#123;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">String</span> mSavePath;</div><div class="line">    <span class="keyword">private</span> DownLoadInterFace mDownLoadInterFace;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> DownLoadTask(<span class="keyword">String</span> savePath, DownLoadInterFace downLoadTask) &#123;</div><div class="line">        <span class="keyword">this</span>.mSavePath = savePath;</div><div class="line">        <span class="keyword">this</span>.mDownLoadInterFace = downLoadTask;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    <span class="keyword">protected</span> ArrayList&lt;<span class="keyword">String</span>&gt; doInBackground(<span class="keyword">String</span>... params) &#123;</div><div class="line">        ArrayList&lt;<span class="keyword">String</span>&gt; names = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line">        <span class="built_in">for</span> (<span class="keyword">String</span> url : params) &#123;</div><div class="line">            <span class="built_in">if</span> (!TextUtils.isEmpty(url)) &#123;</div><div class="line">                <span class="built_in">if</span> (Environment.getExternalStorageState().equals(Environment.MEDIA_MOUNTED)) &#123;</div><div class="line">                    <span class="comment">// 获得存储卡的路径</span></div><div class="line">                    FileOutputStream fos = null;</div><div class="line">                    InputStream is = null;</div><div class="line">                    <span class="built_in">try</span> &#123;</div><div class="line">                        URL downUrl = <span class="keyword">new</span> URL(url);</div><div class="line">                        <span class="comment">// 创建连接</span></div><div class="line">                        HttpURLConnection conn = (HttpURLConnection) downUrl.openConnection();</div><div class="line">                        conn.<span class="built_in">connect</span>();</div><div class="line">                        <span class="comment">// 创建输入流</span></div><div class="line">                        is = conn.getInputStream();</div><div class="line">                        <span class="built_in">File</span> file = <span class="keyword">new</span> <span class="built_in">File</span>(mSavePath);</div><div class="line">                        <span class="comment">// 判断文件目录是否存在</span></div><div class="line">                        <span class="built_in">if</span> (!file.<span class="built_in">exists</span>()) &#123;</div><div class="line">                            file.mkdirs();</div><div class="line">                        &#125;</div><div class="line"></div><div class="line">                        <span class="keyword">String</span>[] split = url.split(<span class="string">"/"</span>);</div><div class="line">                        <span class="keyword">String</span> fileName = split[split.length - <span class="number">1</span>];</div><div class="line">                        <span class="built_in">File</span> mApkFile = <span class="keyword">new</span> <span class="built_in">File</span>(mSavePath, fileName);</div><div class="line">                        names.add(mApkFile.getAbsolutePath());</div><div class="line">                        fos = <span class="keyword">new</span> FileOutputStream(mApkFile, false);</div><div class="line">                        <span class="keyword">int</span> count = <span class="number">0</span>;</div><div class="line">                        <span class="comment">// 缓存</span></div><div class="line">                        <span class="keyword">byte</span> buf[] = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</div><div class="line">                        <span class="built_in">while</span> (true) &#123;</div><div class="line">                            <span class="keyword">int</span> <span class="built_in">read</span> = is.<span class="built_in">read</span>(buf);</div><div class="line">                            <span class="built_in">if</span> (<span class="built_in">read</span> == <span class="number">-1</span>) &#123;</div><div class="line">                                <span class="built_in">break</span>;</div><div class="line">                            &#125;</div><div class="line">                            fos.<span class="built_in">write</span>(buf, <span class="number">0</span>, <span class="built_in">read</span>);</div><div class="line">                            count += <span class="built_in">read</span>;</div><div class="line">                            publishProgress(count);</div><div class="line">                        &#125;</div><div class="line">                        fos.<span class="built_in">flush</span>();</div><div class="line"></div><div class="line">                    &#125; <span class="built_in">catch</span> (Exception e) &#123;</div><div class="line">                        Logcat.e(e.getMessage());</div><div class="line">                    &#125; finally &#123;</div><div class="line">                        <span class="built_in">try</span> &#123;</div><div class="line">                            <span class="built_in">if</span> (is != null) &#123;</div><div class="line">                                is.<span class="built_in">close</span>();</div><div class="line">                            &#125;</div><div class="line">                            <span class="built_in">if</span> (fos != null) &#123;</div><div class="line">                                fos.<span class="built_in">close</span>();</div><div class="line">                            &#125;</div><div class="line">                        &#125; <span class="built_in">catch</span> (IOException e1) &#123;</div><div class="line">                            e1.printStackTrace();</div><div class="line">                        &#125;</div><div class="line">                    &#125;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="built_in">return</span> names;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> onPostExecute(ArrayList&lt;<span class="keyword">String</span>&gt; strings) &#123;</div><div class="line">        super.onPostExecute(strings);</div><div class="line">        <span class="built_in">if</span> (mDownLoadInterFace != null) &#123;</div><div class="line">            mDownLoadInterFace.afterDownLoad(strings);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>由于下载完成后需要拿到文件存储地址这里写了一个 mDownLoadInterFace.afterDownLoad 的回调在 service 拿到回调后：</p>
<figure class="highlight processing"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">void</span> afterDownLoad(ArrayList&lt;<span class="keyword">String</span>&gt; savePaths) &#123;</div><div class="line">            <span class="keyword">if</span> (savePaths.<span class="built_in">size</span>() == <span class="number">1</span>) &#123;</div><div class="line">                Logcat.d(<span class="string">"闪屏页面下载完成"</span> + savePaths);</div><div class="line">                <span class="keyword">if</span> (mScreen != <span class="keyword">null</span>) &#123;</div><div class="line">                    mScreen.savePath = savePaths.<span class="built_in">get</span>(<span class="number">0</span>);</div><div class="line">                &#125;</div><div class="line">                <span class="comment">// 序列化 Splash 到本地</span></div><div class="line">                SerializableUtils.writeObject(mScreen, Constants.SPLASH_PATH + <span class="string">"/"</span> + SPLASH_FILE_NAME);</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                Logcat.d(<span class="string">"闪屏页面下载失败"</span> + savePaths);</div><div class="line">            &#125;</div><div class="line">        &#125;</div></pre></td></tr></table></figure>
<h2 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h2><p>上边 bb 这么多，我们可以看出产品一句话，我们程序员可能就需要工作一天了，所以我们需要将这个常见的功能记录下，下个公司产品再说实现一个闪屏功能，然后我们就可以说 这功能可能需要 1天时间，然后等他答应了，copy 一下，其他的时间你就可以学习下 Rxjava2 ，kotlin， js 之类的了。哈哈哈哈  我真tm机智。</p>
<h2 id="后记："><a href="#后记：" class="headerlink" title="后记："></a>后记：</h2><p>这篇文章投稿到掘金和鸿洋大神的公众号后，大家对我的代码提出了许多建议，我感谢大家能帮助我成长。大家普遍要求一个Demo，花了几个小时时间，将其从项目中抽出来。希望大家赏脸 star 或者fork：</p>
<blockquote>
<p>项目地址：<a href="https://github.com/ImportEffort/SplashActivityDemo" target="_blank" rel="external">SplashActivityDemo</a></p>
</blockquote>
]]></content>
      
        
        <tags>
            
            <tag> Android </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Android-背景可滑动登录界面]]></title>
      <url>/2017/08/22/Android-%E8%83%8C%E6%99%AF%E5%8F%AF%E6%BB%91%E5%8A%A8%E7%99%BB%E5%BD%95%E7%95%8C%E9%9D%A2/</url>
      <content type="html"><![CDATA[<h1 id="Android-背景可滑动登录界面"><a href="#Android-背景可滑动登录界面" class="headerlink" title="Android 背景可滑动登录界面"></a>Android 背景可滑动登录界面</h1><blockquote>
<p>废话不多说，先看下实现后的效果：</p>
</blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/1819960-df1dbc3f7b9c8c26?imageMogr2/auto-orient/strip" alt="这里写图片描述"></p>
<hr>
<h2 id="实现思路"><a href="#实现思路" class="headerlink" title="实现思路"></a>实现思路</h2><p>看到上边 gif 图的效果，主要列举一下实现过程过程中遇到的难点。</p>
<blockquote>
<ol>
<li>如何使键盘弹出时候不遮挡底部登录布局；</li>
<li>当键盘弹出的时候如何不压缩背景图片或者背景延伸至「屏幕以外」；</li>
</ol>
</blockquote>
<p>##从 「 windowSoftInputMode 」 说起<br>相信大家都清楚，Google 官方提供给开发者控制软键盘显示隐藏的方法不多，「windowSoftInputMode」算是我们可控制的软键盘弹出模式的方法之一。关于其属性的说明Google 官方和网上的教程说了很多，他的属性值由两部分组成，形如「 stateHidden|adjustResize 」的格式，<strong>其前半部分（事实上也可写在后边）表示所设置的 Activity 进入时软键盘的状态，后半部分表示软键盘弹出的时候页面是如何调整的。</strong><br>下边分别列出几个可选属性及其含义：</p>
<table>
<thead>
<tr>
<th>属性</th>
<th style="text-align:left">含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>stateUnspecified</td>
<td style="text-align:left">软件弹出状态为系统根据配置的页面主题选择默认的设置，也就是说为默认属性值</td>
</tr>
<tr>
<td>stateUnchanged</td>
<td style="text-align:left">软键盘被保持无论它上次在该页面的状态，也就是说退出该页面的时候是可见或隐藏，当主窗口出现在前面时仍然是值钱的状态。</td>
</tr>
<tr>
<td>stateHidden</td>
<td style="text-align:left">首次创建进入该页面的时候，软键盘被隐藏。</td>
</tr>
<tr>
<td>stateAlwaysHidden</td>
<td style="text-align:left">无论什么情况下进入该页面软键盘总是隐藏状态。</td>
</tr>
<tr>
<td>stateVisible</td>
<td style="text-align:left">首次创建进入该页面的时候，软键盘显示。</td>
</tr>
<tr>
<td>stateAlwaysVisible</td>
<td style="text-align:left">无论什么情况下进入该页面软键盘总是显示状态。</td>
</tr>
<tr>
<td></td>
<td style="text-align:left"></td>
</tr>
<tr>
<td>adjustUnspecified</td>
<td style="text-align:left">页面适应软键盘弹起的时候默认属性，它包括两种情况，一种是页面不可滚动的时候，他压缩布局以保证获取焦点的输入框可见，一种是页面可滚动的时候，他将向上滚动布局，直到输入框可见。</td>
</tr>
<tr>
<td>adjustResize</td>
<td style="text-align:left">页面总是调整屏幕的大小以便留出软键盘的空间。这一属性会重新绘制view</td>
</tr>
<tr>
<td>adjustPan</td>
<td style="text-align:left">设置成adjustPan的时候键盘会去找当前界面的焦点，并始终焦点放在键盘的上方，使获得焦点的view可见。当前窗口的内容将自动移动以便当前焦点从不被键盘覆盖和用户能总是看到输入内容的部分</td>
</tr>
</tbody>
</table>
<p>通过上述列表我们可以了解到 windowSoftInputMode 的几个属性值的含义。我们可以根据具体的需求来选择合适属性。However ! 产品需求永远比属性来的奇葩。比如说我们想要实现的的这个效果：</p>
<blockquote>
<ol>
<li>软键盘弹出不遮挡全部的输入布局,并不是单纯的留出一个输入框控件</li>
<li>软键盘被弹起的时候背景不能被压缩，或者向上滑动</li>
</ol>
</blockquote>
<p>首先看第一个需求：我们可以使用 adjustResize 属性来达到效果，可以看到这样图片已经被自动向上移动了，ok,如果效果您还算满意，那我就没什么好说的了，但是我们老板和产品以及 UI 说这样不好，背景不能压缩也就是我们说的第二个需求。当时我心中就有一种 mmp 想对他们说。但是呢作为一个敢于挑战的 Android 程序员来说这个小小的需求并不算什么。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1819960-204f6691b1857567?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="这里写图片描述"></p>
<p>对于第二个需求，首先我们要了解为什么图片会被上滑，是因为我们配置了 adjustResize 属性，系统自动根据键盘所需要的空间向上移动整个页面的布局，并<strong>调整页面布局的大小</strong>以满足不被软键盘隐藏的效果。举个栗子： </p>
<blockquote>
<p>手机屏幕的高为1920px，那么整个Activity的布局高度也为1920px。当设置该属性后点击界面中的EditText，此时弹出软键盘其高度为800px。为了完整地显示此软键盘，系统会调整Activity布局的高度为1920px-800px=1120px。</p>
</blockquote>
<p>注意这里说了会调整布局的大小，根据以往的经验，系统自动调节的布局都不是我们想要的结果，比如各种可滑动 View 嵌套的问题。那么这个需求能否依据这个思路来结局呢？</p>
<blockquote>
<p>当 windowSoftInputMode 被设置为 adjustResize 时候，当布局调整的时候被调整的布局均会重绘制，并走了<code>onMeasure，onSizeChanged，onLayout</code> 。<br>当 windowSoftInputMode 被设置为 adjustPan 时候，当布局调整的时候被调整的布局均会重绘制，并走了<code>onMeasure, onLayout</code> 。</p>
<p>这里只需要注意 两者都走了 onMeasure 方法，至于 adjustPan 没走 onSizeChanged ，我们会在之后关于软键盘弹出的监控的文章中详细说明。</p>
</blockquote>
<p>那么我们就利用其走了 onMeasure 方法，来「阻止」系统自动调整的布局大小。由于我们背景用了 ViewPager，所以我们需要重写 ViewPager 的 OnMeasure 方法。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AutoViewPager</span> <span class="keyword">extends</span> <span class="title">ViewPager</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> mScreenHeight;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">AutoViewPager</span><span class="params">(Context context)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>(context,<span class="keyword">null</span>);</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">AutoViewPager</span><span class="params">(Context context, AttributeSet attrs)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>(context, attrs);</div><div class="line">        mScreenHeight = DensityUtil.getHeight(getContext());</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onMeasure</span><span class="params">(<span class="keyword">int</span> widthMeasureSpec, <span class="keyword">int</span> heightMeasureSpec)</span> </span>&#123;</div><div class="line">        heightMeasureSpec = MeasureSpec.makeMeasureSpec(mScreenHeight, MeasureSpec.EXACTLY);</div><div class="line">        <span class="keyword">super</span>.onMeasure(widthMeasureSpec, heightMeasureSpec);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>DensityUtil.getHeight 方法是获取屏幕高度的方法。</p>
<figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">public static int getHeight(<span class="built_in">Context</span> <span class="built_in">context</span>) &#123;</div><div class="line">		<span class="keyword">DisplayMetrics </span>dm = new <span class="keyword">DisplayMetrics();</span></div><div class="line"><span class="keyword">	</span>	WindowManager mWm = (WindowManager) <span class="built_in">context</span>.getSystemService(<span class="built_in">Context</span>.WINDOW_SERVICE)<span class="comment">;</span></div><div class="line">		mWm.getDefaultDisplay().getMetrics(dm)<span class="comment">;</span></div><div class="line">		int <span class="keyword">screenHeight </span>= dm.heightPixels<span class="comment">;</span></div><div class="line">		return <span class="keyword">screenHeight;</span></div><div class="line"><span class="keyword">&#125;</span></div></pre></td></tr></table></figure>
<p>经过这样的设置我们就讲背景 ViewPager 的高度写死为屏幕的高度。这样当键盘弹出的时候ViewPager 的大小就会变了。 经过测试我们这个方法就就可以组织背景向上移动了。其实我们并没有组织系统对控件的重绘，而是改变了最终重绘的 ViewPager 的高度大小，给用户的感觉就是我的背景没有改变。</p>
<p>最后附送实现的布局代码：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div></pre></td><td class="code"><pre><div class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span><span class="meta">?&gt;</span></span></div><div class="line"><span class="tag">&lt;<span class="name">RelativeLayout</span></span></div><div class="line"><span class="tag">    <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></div><div class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">"@+id/rl_root"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">"vertical"</span>&gt;</span></div><div class="line"></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">RelativeLayout</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span>&gt;</span></div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">com.goldenalpha.stock.master.views.AutoViewPager</span></span></div><div class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/login_bg_banner"</span></span></div><div class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></div><div class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>/&gt;</span></div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">LinearLayout</span></span></div><div class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/ll_dot"</span></span></div><div class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></div><div class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></div><div class="line"><span class="tag">            <span class="attr">android:layout_centerHorizontal</span>=<span class="string">"true"</span></span></div><div class="line"><span class="tag">            <span class="attr">android:layout_gravity</span>=<span class="string">"center_horizontal"</span>&gt;</span></div><div class="line"></div><div class="line">            <span class="tag">&lt;<span class="name">ImageView</span></span></div><div class="line"><span class="tag">                <span class="attr">android:id</span>=<span class="string">"@+id/iv_dot_1"</span></span></div><div class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">"7dp"</span></span></div><div class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">"7dp"</span></span></div><div class="line"><span class="tag">                <span class="attr">android:layout_marginRight</span>=<span class="string">"8dp"</span></span></div><div class="line"><span class="tag">                <span class="attr">android:background</span>=<span class="string">"@drawable/banner_dot_shape_select"</span>/&gt;</span></div><div class="line"></div><div class="line">            <span class="tag">&lt;<span class="name">ImageView</span></span></div><div class="line"><span class="tag">                <span class="attr">android:id</span>=<span class="string">"@+id/iv_dot_2"</span></span></div><div class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">"7dp"</span></span></div><div class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">"7dp"</span></span></div><div class="line"><span class="tag">                <span class="attr">android:layout_marginRight</span>=<span class="string">"8dp"</span></span></div><div class="line"><span class="tag">                <span class="attr">android:background</span>=<span class="string">"@drawable/bander_dot_shape_noselect"</span>/&gt;</span></div><div class="line"></div><div class="line">            <span class="tag">&lt;<span class="name">ImageView</span></span></div><div class="line"><span class="tag">                <span class="attr">android:id</span>=<span class="string">"@+id/iv_dot_3"</span></span></div><div class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">"7dp"</span></span></div><div class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">"7dp"</span></span></div><div class="line"><span class="tag">                <span class="attr">android:background</span>=<span class="string">"@drawable/bander_dot_shape_noselect"</span>/&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></div><div class="line"></div><div class="line"></div><div class="line">    <span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></div><div class="line"></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">RelativeLayout</span></span></div><div class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/activity_login"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"270dp"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_alignParentBottom</span>=<span class="string">"true"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:paddingBottom</span>=<span class="string">"@dimen/login_margin_bottom"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_marginLeft</span>=<span class="string">"10dp"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_marginRight</span>=<span class="string">"10dp"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">"@drawable/login_shape"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:orientation</span>=<span class="string">"vertical"</span>&gt;</span></div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">LinearLayout</span></span></div><div class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></div><div class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></div><div class="line"><span class="tag">            <span class="attr">android:orientation</span>=<span class="string">"vertical"</span>&gt;</span></div><div class="line"></div><div class="line">            <span class="tag">&lt;<span class="name">RelativeLayout</span></span></div><div class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></div><div class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span>&gt;</span></div><div class="line"></div><div class="line">                <span class="tag">&lt;<span class="name">RelativeLayout</span></span></div><div class="line"><span class="tag">                    <span class="attr">android:id</span>=<span class="string">"@+id/rl_phone_name"</span></span></div><div class="line"><span class="tag">                    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></div><div class="line"><span class="tag">                    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span>&gt;</span></div><div class="line"></div><div class="line">                    <span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line"><span class="tag">                        <span class="attr">android:id</span>=<span class="string">"@+id/tv_area_code"</span></span></div><div class="line"><span class="tag">                        <span class="attr">style</span>=<span class="string">"@style/Text.normal"</span></span></div><div class="line"><span class="tag">                        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></div><div class="line"><span class="tag">                        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></div><div class="line"><span class="tag">                        <span class="attr">android:layout_centerVertical</span>=<span class="string">"true"</span></span></div><div class="line"><span class="tag">                        <span class="attr">android:layout_marginLeft</span>=<span class="string">"@dimen/login_tv_margin_left"</span></span></div><div class="line"><span class="tag">                        <span class="attr">android:padding</span>=<span class="string">"5dp"</span></span></div><div class="line"><span class="tag">                        <span class="attr">android:text</span>=<span class="string">"+86"</span>&gt;</span></div><div class="line"></div><div class="line">                        <span class="tag">&lt;<span class="name">requestFocus</span>/&gt;</span></div><div class="line">                    <span class="tag">&lt;/<span class="name">TextView</span>&gt;</span></div><div class="line"></div><div class="line">                    <span class="tag">&lt;<span class="name">View</span></span></div><div class="line"><span class="tag">                        <span class="attr">android:layout_width</span>=<span class="string">"0.3dp"</span></span></div><div class="line"><span class="tag">                        <span class="attr">android:layout_height</span>=<span class="string">"10dp"</span></span></div><div class="line"><span class="tag">                        <span class="attr">android:layout_centerHorizontal</span>=<span class="string">"true"</span></span></div><div class="line"><span class="tag">                        <span class="attr">android:layout_centerVertical</span>=<span class="string">"true"</span></span></div><div class="line"><span class="tag">                        <span class="attr">android:layout_marginLeft</span>=<span class="string">"@dimen/login_line_margin"</span></span></div><div class="line"><span class="tag">                        <span class="attr">android:layout_toRightOf</span>=<span class="string">"@id/tv_area_code"</span></span></div><div class="line"><span class="tag">                        <span class="attr">android:background</span>=<span class="string">"@color/gray"</span>/&gt;</span></div><div class="line"></div><div class="line"></div><div class="line">                    <span class="tag">&lt;<span class="name">EditText</span></span></div><div class="line"><span class="tag">                        <span class="attr">android:id</span>=<span class="string">"@+id/et_phone_num"</span></span></div><div class="line"><span class="tag">                        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></div><div class="line"><span class="tag">                        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></div><div class="line"><span class="tag">                        <span class="attr">android:layout_marginLeft</span>=<span class="string">"@dimen/login_et_margin_left"</span></span></div><div class="line"><span class="tag">                        <span class="attr">android:background</span>=<span class="string">"@null"</span></span></div><div class="line"><span class="tag">                        <span class="attr">android:hint</span>=<span class="string">"请输入您的手机号码"</span></span></div><div class="line"><span class="tag">                        <span class="attr">android:inputType</span>=<span class="string">"phone"</span></span></div><div class="line"><span class="tag">                        <span class="attr">android:maxLength</span>=<span class="string">"11"</span></span></div><div class="line"><span class="tag">                        <span class="attr">android:maxLines</span>=<span class="string">"1"</span></span></div><div class="line"><span class="tag">                        <span class="attr">android:paddingBottom</span>=<span class="string">"20dp"</span></span></div><div class="line"><span class="tag">                        <span class="attr">android:paddingTop</span>=<span class="string">"20dp"</span></span></div><div class="line"><span class="tag">                        <span class="attr">android:textColor</span>=<span class="string">"@color/black"</span></span></div><div class="line"><span class="tag">                        <span class="attr">android:textColorHint</span>=<span class="string">"@color/gray"</span></span></div><div class="line"><span class="tag">                        <span class="attr">android:textCursorDrawable</span>=<span class="string">"@null"</span></span></div><div class="line"><span class="tag">                        <span class="attr">android:textSize</span>=<span class="string">"@dimen/font_normal"</span>&gt;</span></div><div class="line"></div><div class="line">                        <span class="tag">&lt;<span class="name">requestFocus</span>/&gt;</span></div><div class="line">                    <span class="tag">&lt;/<span class="name">EditText</span>&gt;</span></div><div class="line"></div><div class="line">                <span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></div><div class="line"></div><div class="line"></div><div class="line">                <span class="tag">&lt;<span class="name">View</span></span></div><div class="line"><span class="tag">                    <span class="attr">android:id</span>=<span class="string">"@+id/line_phone_num"</span></span></div><div class="line"><span class="tag">                    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></div><div class="line"><span class="tag">                    <span class="attr">android:layout_height</span>=<span class="string">"0.5dp"</span></span></div><div class="line"><span class="tag">                    <span class="attr">android:layout_below</span>=<span class="string">"@+id/rl_phone_name"</span></span></div><div class="line"><span class="tag">                    <span class="attr">android:layout_centerHorizontal</span>=<span class="string">"true"</span></span></div><div class="line"><span class="tag">                    <span class="attr">android:layout_marginLeft</span>=<span class="string">"@dimen/login_line_margin"</span></span></div><div class="line"><span class="tag">                    <span class="attr">android:layout_marginRight</span>=<span class="string">"@dimen/login_line_margin"</span></span></div><div class="line"><span class="tag">                    <span class="attr">android:background</span>=<span class="string">"@color/gray"</span>/&gt;</span></div><div class="line"></div><div class="line">                <span class="tag">&lt;<span class="name">RelativeLayout</span></span></div><div class="line"><span class="tag">                    <span class="attr">android:id</span>=<span class="string">"@+id/rl_check_num"</span></span></div><div class="line"><span class="tag">                    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></div><div class="line"><span class="tag">                    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></div><div class="line"><span class="tag">                    <span class="attr">android:layout_alignLeft</span>=<span class="string">"@+id/line_phone_num"</span></span></div><div class="line"><span class="tag">                    <span class="attr">android:layout_alignRight</span>=<span class="string">"@+id/line_phone_num"</span></span></div><div class="line"><span class="tag">                    <span class="attr">android:layout_below</span>=<span class="string">"@+id/line_phone_num"</span>&gt;</span></div><div class="line"></div><div class="line">                    <span class="tag">&lt;<span class="name">EditText</span></span></div><div class="line"><span class="tag">                        <span class="attr">android:id</span>=<span class="string">"@+id/et_check_num"</span></span></div><div class="line"><span class="tag">                        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></div><div class="line"><span class="tag">                        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></div><div class="line"><span class="tag">                        <span class="attr">android:layout_centerInParent</span>=<span class="string">"true"</span></span></div><div class="line"><span class="tag">                        <span class="attr">android:layout_toLeftOf</span>=<span class="string">"@+id/btn_get_check"</span></span></div><div class="line"><span class="tag">                        <span class="attr">android:background</span>=<span class="string">"@null"</span></span></div><div class="line"><span class="tag">                        <span class="attr">android:hint</span>=<span class="string">"请输入验证码"</span></span></div><div class="line"><span class="tag">                        <span class="attr">android:inputType</span>=<span class="string">"number"</span></span></div><div class="line"><span class="tag">                        <span class="attr">android:maxLength</span>=<span class="string">"4"</span></span></div><div class="line"><span class="tag">                        <span class="attr">android:maxLines</span>=<span class="string">"1"</span></span></div><div class="line"><span class="tag">                        <span class="attr">android:paddingBottom</span>=<span class="string">"20dp"</span></span></div><div class="line"><span class="tag">                        <span class="attr">android:paddingLeft</span>=<span class="string">"120dp"</span></span></div><div class="line"><span class="tag">                        <span class="attr">android:paddingTop</span>=<span class="string">"20dp"</span></span></div><div class="line"><span class="tag">                        <span class="attr">android:textColor</span>=<span class="string">"@color/black"</span></span></div><div class="line"><span class="tag">                        <span class="attr">android:textColorHint</span>=<span class="string">"@color/gray"</span></span></div><div class="line"><span class="tag">                        <span class="attr">android:textCursorDrawable</span>=<span class="string">"@null"</span></span></div><div class="line"><span class="tag">                        <span class="attr">android:textSize</span>=<span class="string">"@dimen/font_normal"</span>/&gt;</span></div><div class="line"></div><div class="line">                    <span class="tag">&lt;<span class="name">com.goldenalpha.stock.master.views.CountDownButton</span></span></div><div class="line"><span class="tag">                        <span class="attr">android:id</span>=<span class="string">"@+id/btn_get_check"</span></span></div><div class="line"><span class="tag">                        <span class="attr">android:layout_width</span>=<span class="string">"@dimen/login_btn_check_width"</span></span></div><div class="line"><span class="tag">                        <span class="attr">android:layout_height</span>=<span class="string">"@dimen/login_btn_check_height"</span></span></div><div class="line"><span class="tag">                        <span class="attr">android:layout_alignParentRight</span>=<span class="string">"true"</span></span></div><div class="line"><span class="tag">                        <span class="attr">android:layout_centerVertical</span>=<span class="string">"true"</span></span></div><div class="line"><span class="tag">                        <span class="attr">android:layout_marginBottom</span>=<span class="string">"@dimen/login_btn_check_margin_bottom"</span></span></div><div class="line"><span class="tag">                        <span class="attr">android:layout_marginTop</span>=<span class="string">"@dimen/login_btn_check_margin_top"</span></span></div><div class="line"><span class="tag">                        <span class="attr">android:gravity</span>=<span class="string">"center"</span></span></div><div class="line"><span class="tag">                        <span class="attr">android:text</span>=<span class="string">"获取验证码"</span></span></div><div class="line"><span class="tag">                        <span class="attr">android:textColor</span>=<span class="string">"@color/gray"</span></span></div><div class="line"><span class="tag">                        <span class="attr">android:textSize</span>=<span class="string">"@dimen/font_normal"</span></span></div><div class="line"><span class="tag">                        <span class="attr">app:defaultBackgroundResource</span>=<span class="string">"@drawable/btn_check_gray_shape"</span>/&gt;</span></div><div class="line"></div><div class="line">                <span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></div><div class="line"></div><div class="line">                <span class="tag">&lt;<span class="name">View</span></span></div><div class="line"><span class="tag">                    <span class="attr">android:id</span>=<span class="string">"@+id/line_check_num"</span></span></div><div class="line"><span class="tag">                    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></div><div class="line"><span class="tag">                    <span class="attr">android:layout_height</span>=<span class="string">"0.5dp"</span></span></div><div class="line"><span class="tag">                    <span class="attr">android:layout_below</span>=<span class="string">"@+id/rl_check_num"</span></span></div><div class="line"><span class="tag">                    <span class="attr">android:layout_centerHorizontal</span>=<span class="string">"true"</span></span></div><div class="line"><span class="tag"></span></div><div class="line"><span class="tag">                    <span class="attr">android:layout_marginLeft</span>=<span class="string">"25.3dp"</span></span></div><div class="line"><span class="tag">                    <span class="attr">android:layout_marginRight</span>=<span class="string">"25.3dp"</span></span></div><div class="line"><span class="tag">                    <span class="attr">android:background</span>=<span class="string">"@color/driver_color"</span>/&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></div><div class="line"></div><div class="line">            <span class="tag">&lt;<span class="name">com.goldenalpha.stock.master.views.LoadingButton</span></span></div><div class="line"><span class="tag">                <span class="attr">android:id</span>=<span class="string">"@+id/btn_phone_login"</span></span></div><div class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">"@dimen/login_btn_phone_width"</span></span></div><div class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">"@dimen/login_btn_phone_height"</span></span></div><div class="line"><span class="tag">                <span class="attr">android:layout_gravity</span>=<span class="string">"center_horizontal"</span></span></div><div class="line"><span class="tag">                <span class="attr">android:layout_marginTop</span>=<span class="string">"23dp"</span>/&gt;</span></div><div class="line">            </div><div class="line">            <span class="tag">&lt;<span class="name">FrameLayout</span></span></div><div class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></div><div class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></div><div class="line"><span class="tag">                <span class="attr">android:layout_marginTop</span>=<span class="string">"23dp"</span>&gt;</span></div><div class="line"></div><div class="line">                <span class="tag">&lt;<span class="name">ImageView</span></span></div><div class="line"><span class="tag">                    <span class="attr">android:id</span>=<span class="string">"@+id/tv_wx_login"</span></span></div><div class="line"><span class="tag">                    <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></div><div class="line"><span class="tag">                    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></div><div class="line"><span class="tag">                    <span class="attr">android:layout_gravity</span>=<span class="string">"center"</span></span></div><div class="line"><span class="tag">                    <span class="attr">android:src</span>=<span class="string">"@drawable/wx_login_selector"</span>/&gt;</span></div><div class="line"></div><div class="line">            <span class="tag">&lt;/<span class="name">FrameLayout</span>&gt;</span></div><div class="line"></div><div class="line">        <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></div></pre></td></tr></table></figure>
<p>清单文件中的配置</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"> <span class="tag">&lt;<span class="name">activity</span></span></div><div class="line"><span class="tag">    <span class="attr">android:name</span>=<span class="string">".activities.LoginActivity"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:launchMode</span>=<span class="string">"singleTask"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:screenOrientation</span>=<span class="string">"portrait"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:theme</span>=<span class="string">"@style/AppTheme"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:windowSoftInputMode</span>=<span class="string">"stateHidden|adjustResize"</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">activity</span>&gt;</span></div></pre></td></tr></table></figure>
<p>后来又读者反映按照的方式键盘还是会将布局顶上去：</p>
<blockquote>
<p> 检查自己的主题和代码中是否设置了全屏模式（FullScreen），因为如果设置了全屏模式的话 adjustResize 将失效，参考  <a href="http://stackoverflow.com/questions/7417123/android-how-to-adjust-layout-in-full-screen-mode-when-softkeyboard-is-visible/19494006#19494006" target="_blank" rel="external">Android How to adjust layout in Full Screen Mode when softkeyboard is visible</a> ；</p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> Android </category>
            
        </categories>
        
        
    </entry>
    
  
  
</search>
